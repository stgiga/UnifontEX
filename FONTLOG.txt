Description:
This is a modified build of the final (and most complete) TrueType build of GNU Unifont (15.0.06-JP, which has more characters than non-JP, allowing for more shades of brightness when making videos or images into Unicode art. 303 of said characters are in Plane 2 and provide enhanced coverage of JIS X 0213, as well as 3 Plane 3 characters, namely the Taito Kanji and both variations of the Biang character. Said characters are rather interesting to see in a 16px font given their high amount of strokes) merged with the last version of GNU Unifont Upper (Plane 1 as well as Plane 14) capable of being merged with Unifont's Plane 0 characters (11.0.01 Upper. Going any higher than GNU Unifont 11.0.01 Upper is not possible, even if the version of Unifont used for Plane 0 characters is also 11.0.01) after deleting the black boxes that contain the hexadecimal values of unassigned characters.
So you end up with Unicode 15.0 (released on September 13th, 2022) support in Plane 0, as well as some JIS X 0213 Plane 2 Kanji, plus the Biang and Taito Plane 3 characters. 

Since September 12th, 2023's Unicode 15.1 only added CJK Unified Ideographs Extension I in Plane 2 (which Unifont has a long history of shying away from) as well as 5 Ideographic Description Characters (which are in Plane 0 and are closer to control characters but in reality are not), and nothing else, it means that the Plane 0 coverage remains valid beyond just 15.0 until Unicode 16.0 happens, a version which adds some characters into Plane 0 that, unlike the extra Ideographic Description Characters added into Plane 0 during Unicode 15.1, don't share some semblance of similarity to control characters (in reality, Ideographic Description Characters are not control characters, hence why I say "some semblance of similarity"). So you have Plane 0 support for the vast majority of September 12th, 2023's Unicode 15.1's Plane 0 characters (plus the Plane 2 JIS X 0213 characters and the 2020 Plane 3 Biang and Taito characters), and support for 2018's Plane 1 and Plane 14 characters as of Unifont 11.0.01 Upper (versions of Unifont Upper after 11.0.01 can't be merged with ANY version of Unifont 11 or higher unless one uses Apple's iOS Safari SVG webfont format), netting you a great amount of Unicode support. Now as for why TrueType, it's because Unifont 11.0.01 Upper was before OpenType builds existed, which is a problem because TrueType and OpenType store outlines differently, but that's only one of the problems preventing merging of Unifont 15.1 with 11.0.01 Upper. It turns out that even 2022 FontForge cannot understand Unifont's OpenType builds, even of the same era. Also, while you CAN compile newer TrueType builds manually, I unfortunately have found this impossible, even on my Linux machine. So, Unifont 15.0.06-JP + Unifont 11.0.01 Upper is the last word here. Thus, my years-long project to improve GNU Unifont is done, right here and now.

Now, I suppose mentioning some more about the font project is in order. This project was a years-long project (I started it just before my first year of American high school, so I was 13 at the time. I'm now 21 at present, and finishing up my third year of university) that was designed to address quite a few things I felt Unifont didn't think of. The major one was of course the separation of planes, but I also did some other changes. One was to take steps to make the font work in terminals, text editors, and IDEs that deliberately only try to load fonts that are monospaced. I set quite a few values to ones that such applications want. And, even though Unifont is actually duospaced (characters are 8x16 unless they require 16x16, or beyond up to 32x16 in the case of old Unifont 10 versions, which aren't in play here, and some of the more complicated Plane 1 scripts like Cuneiform and Egyptian Hieroglyphs are going to be drawn at 32x32 due to their complexity, but at present, this hasn't happened yet despite being in the works for years), in practice, it behaves just like a monospace font. I thus use it as my terminal and coding font to increase compatibility with Unicode when I'm doing coding and debugging, which is quite helpful, especially when said applications cannot support multiple fonts, which is bad for compatibility.

WIth regards to compatibility, I have also made the TrueType into an OpenType TrueType that is as hybrid as possible to keep certain apps happy, but I also took steps to ensure it won't break on older platforms and will work everywhere. I checked the "Apple" (for better Mac compatibility even on older versions of macOS, Mac OS X, and Mac OS) and "OpenType" boxes in FontForge, as well as "Dummy 'DSIG'" (which in combination with the "OpenType" box makes Windows and others treat it as OpenType, as well as others), plus the "Windows-compatible 'kern'" checkbox to do basically the same thing as the "Old-style 'kern'" checkbox but without conflicting with the "Apple" checkbox. Also, the OS/2 table version is deliberately left at 1, and the the GASP table is left unaltered from stock Unifont (it has a version of zero, isn't really populated, and it doesn't have "Optimized for ClearType" checked. Thus, older Windows versions won't complain either. Also I took measures to make the font work on pickier cmd.exe versions. I also made the TeX Table support "TeX Math Symbol" to fix stuff, and I checked "Has Vertical Metrics" to make it function in Inkscape environments involving vertical CJKV/etc. al. text. I also made BDF and TTF2PNG (a GPL2 program by DataBeaver of The DataBeaver's Domain that converts TrueType fonts into PNG font sheets) versions for environments where TrueType does not make sense, such as old Linux/etc. al. for BDF, and for character LCDs and other embedded systems where 1MiB is your limit (the TTF2PNG version, which is unabridged, also the BDF supports more characters than official Unifont's BDF does).

Basically, this project is designed to improve GNU Unifont and make it much more compatible, and it had MANY prototypes. A lot of the process involved trial and error with obscure utilities, sometimes on academic computers via FontForge Portable, and even had some builds transferred over to certain computers over USB flash drives. This project also outlived two computers of mine. Also, I remember always checking the Unicode Consortium's website and GNU Unifont's website for updated versions, then having to remake the entire project each update, which was a lot of where the length of the process came from. But now, after many years, I am finally liberated from this project, and I can put more effort into other things of mine, and all of you can have better Unicode support in as many places as possible thanks to a labor of love that took well over 5 years to make. I hope you enjoy this as much as I do.


Changelog:

September 12th, 2023:
This is THE final build, and no, I didn't remove vertical metrics.

There were many prototypes I made over the years, but none of them were necessarily production-ready, and while they probably have their dates on them, I don't know how much of a changelog I should do, especially since some older prototypes were significantly messy. Not to mention that the ones on Google Drive had their dates change when shared with myself, so I cannot truly know unless I dig for the timestamp inside, but then again that may not have even existed in some builds. Also, the oldest builds are the most elusive. Ultimately, this project was also restarted many times when updates happened to base Unifont or the Unicode Standard. So, because I can't do a detailed changelog due to the above factors, I made the description detailed. 

Contributors: 

Unifont has MANY authors to it, and always did. Some were even anonymous. I will try and list as many as I can (I scoured every Unifont page and even searched for the BDFs used and looked for any credits. Also, I'm keeping this field ASCII-safe, so I did take measures to do so, while also not omitting them from the list. I did research the rules of how to properly do it. Also, I wanted to be thorough, because attribution is important. Also, I made sure to credit what actually is in here. Also, to avoid potential issues that could arise, I didn't feel comfortable listing the middle names of the two people here who have freely given theirs, either on said user's website in one of the two people, or in one of their credits on the official Unifont website in the case of the second person. However, in the case of the individual with two middle names, I credited said individual as is on the Unifont website within ASCII limits, though, specifically, an archived version because said person created the TrueType scripts, which are now obsolete. In the case of the person whose middle name is only credited once on the Unifont website, later credits for this person don't provide a middle name, so to protect that person's privacy I am keeping it that way. As for the person whose name is on said person's website, this individual does not provide even a middle initial on Unifont's website's instance of said individual's name, but provides the initial more prominently on said user's website than said person's middle name. So, to protect said person's privacy, I am not providing that person's middle name either. Basically I'm sticking to the Unifont website's credits, as well as the credits in the fonts that Unifont borrows from that still exist and also still have credits. I also went through the original site's credits from before Unifoundry was the link to Unifont. Ultimately, I wanted to do due diligence in proper attribution without causing problems. I even preserved the original casing in any credits with all-caps components for the sake of faithfulness. Anyways, here is the list of credits):

Roman Cyzborra, Paul Hardy, David Corbett, Johnnie Weaver, He Zhinxiang, Hu Yuanxing, Toshiyuki Imamura, HANATAKA Shinya, Taichi Kawabata, Yuko, Koichi Yasuoka, TOYOSHIMA Masayuki, Kazuo Koike, SATO Yasunao, Qianqian Fang, Helmut Grohne, Anonymous1, Andrew Miller, Michael Walden, Terence Eden, Luis Alejandro Gonzalez Miranda, Nils Moskopp, Artur Quaglio, Jeong-Mi, David Starner, Rich Felker, Jungshik Shin, Joshua Kraemer (I don't know if FontForge supports umlauts in FONTLOG, so I'm sticking to ASCII), Jaldhar Vyas, Takahashi Naoto, Markus Kuhn, Kaleb Keithley, Sihattha, Mark Leisher, Primoz Peterlin, Admas Fisseha, Kagotani, Hong Kong University, Mark Crispin, Frank Portaneri, Fethi Amara, Manop Wongsaisuwan, Yu Izumi, Rebecca Bettencourt, WenQuanYi, DataBeaver, Minseo Lee, et. al., and me, stgiga. I prefer not to give my real name out online.

Hopefully this FONTLOG serves as a good record.

Generated the final build on September 12th, 2023, at 5:11 PM in California time! I'm finally glad to be liberated from this years-long project! Enjoy!

December 18th, 2023:
Added justification table and sample text.

Updated log.Description:
This is a modified build of the final (and most complete) TrueType build of GNU Unifont (15.0.06-JP, which has more characters than non-JP, allowing for more shades of brightness when making videos or images into Unicode art. 303 of said characters are in Plane 2 and provide enhanced coverage of JIS X 0213, as well as 3 Plane 3 characters, namely the Taito Kanji and both variations of the Biang character. Said characters are rather interesting to see in a 16px font given their high amount of strokes) merged with the last version of GNU Unifont Upper (Plane 1 as well as Plane 14) capable of being merged with Unifont's Plane 0 characters (11.0.01 Upper. Going any higher than GNU Unifont 11.0.01 Upper is not possible, even if the version of Unifont used for Plane 0 characters is also 11.0.01) after deleting the black boxes that contain the hexadecimal values of unassigned characters.
So you end up with Unicode 15.0 (released on September 13th, 2022) support in Plane 0, as well as some JIS X 0213 Plane 2 Kanji, plus the Biang and Taito Plane 3 characters. 

Since September 12th, 2023's Unicode 15.1 only added CJK Unified Ideographs Extension I in Plane 2 (which Unifont has a long history of shying away from) as well as 5 Ideographic Description Characters (which are in Plane 0 and are closer to control characters but in reality are not), and nothing else, it means that the Plane 0 coverage remains valid beyond just 15.0 until Unicode 16.0 happens, a version which adds some characters into Plane 0 that, unlike the extra Ideographic Description Characters added into Plane 0 during Unicode 15.1, don't share some semblance of similarity to control characters (in reality, Ideographic Description Characters are not control characters, hence why I say "some semblance of similarity"). So you have Plane 0 support for the vast majority of September 12th, 2023's Unicode 15.1's Plane 0 characters (plus the Plane 2 JIS X 0213 characters and the 2020 Plane 3 Biang and Taito characters), and support for 2018's Plane 1 and Plane 14 characters as of Unifont 11.0.01 Upper (versions of Unifont Upper after 11.0.01 can't be merged with ANY version of Unifont 11 or higher unless one uses Apple's iOS Safari SVG webfont format), netting you a great amount of Unicode support. Now as for why TrueType, it's because Unifont 11.0.01 Upper was before OpenType builds existed, which is a problem because TrueType and OpenType store outlines differently, but that's only one of the problems preventing merging of Unifont 15.1 with 11.0.01 Upper. It turns out that even 2022 FontForge cannot understand Unifont's OpenType builds, even of the same era. Also, while you CAN compile newer TrueType builds manually, I unfortunately have found this impossible, even on my Linux machine. So, Unifont 15.0.06-JP + Unifont 11.0.01 Upper is the last word here. Thus, my years-long project to improve GNU Unifont is done, right here and now.

Now, I suppose mentioning some more about the font project is in order. This project was a years-long project (I started it just before my first year of American high school, so I was 13 at the time. I'm now 21 at present, and finishing up my third year of university) that was designed to address quite a few things I felt Unifont didn't think of. The major one was of course the separation of planes, but I also did some other changes. One was to take steps to make the font work in terminals, text editors, and IDEs that deliberately only try to load fonts that are monospaced. I set quite a few values to ones that such applications want. And, even though Unifont is actually duospaced (characters are 8x16 unless they require 16x16, or beyond up to 32x16 in the case of old Unifont 10 versions, which aren't in play here, and some of the more complicated Plane 1 scripts like Cuneiform and Egyptian Hieroglyphs are going to be drawn at 32x32 due to their complexity, but at present, this hasn't happened yet despite being in the works for years), in practice, it behaves just like a monospace font. I thus use it as my terminal and coding font to increase compatibility with Unicode when I'm doing coding and debugging, which is quite helpful, especially when said applications cannot support multiple fonts, which is bad for compatibility.

WIth regards to compatibility, I have also made the TrueType into an OpenType TrueType that is as hybrid as possible to keep certain apps happy, but I also took steps to ensure it won't break on older platforms and will work everywhere. I checked the "Apple" (for better Mac compatibility even on older versions of macOS, Mac OS X, and Mac OS) and "OpenType" boxes in FontForge, as well as "Dummy 'DSIG'" (which in combination with the "OpenType" box makes Windows and others treat it as OpenType, as well as others), plus the "Windows-compatible 'kern'" checkbox to do basically the same thing as the "Old-style 'kern'" checkbox but without conflicting with the "Apple" checkbox. Also, the OS/2 table version is deliberately left at 1, and the the GASP table is left unaltered from stock Unifont (it has a version of zero, isn't really populated, and it doesn't have "Optimized for ClearType" checked. Thus, older Windows versions won't complain either. Also I took measures to make the font work on pickier cmd.exe versions. I also made the TeX Table support "TeX Math Symbol" to fix stuff, and I checked "Has Vertical Metrics" to make it function in Inkscape environments involving vertical CJKV/etc. al. text. I also made BDF and TTF2PNG (a GPL2 program by DataBeaver of The DataBeaver's Domain that converts TrueType fonts into PNG font sheets) versions for environments where TrueType does not make sense, such as old Linux/etc. al. for BDF, and for character LCDs and other embedded systems where 1MiB is your limit (the TTF2PNG version, which is unabridged, also the BDF supports more characters than official Unifont's BDF does).

Basically, this project is designed to improve GNU Unifont and make it much more compatible, and it had MANY prototypes. A lot of the process involved trial and error with obscure utilities, sometimes on academic computers via FontForge Portable, and even had some builds transferred over to certain computers over USB flash drives. This project also outlived two computers of mine. Also, I remember always checking the Unicode Consortium's website and GNU Unifont's website for updated versions, then having to remake the entire project each update, which was a lot of where the length of the process came from. But now, after many years, I am finally liberated from this project, and I can put more effort into other things of mine, and all of you can have better Unicode support in as many places as possible thanks to a labor of love that took well over 5 years to make. I hope you enjoy this as much as I do.


Changelog:

September 12th, 2023:
This is THE final build, and no, I didn't remove vertical metrics.

There were many prototypes I made over the years, but none of them were necessarily production-ready, and while they probably have their dates on them, I don't know how much of a changelog I should do, especially since some older prototypes were significantly messy. Not to mention that the ones on Google Drive had their dates change when shared with myself, so I cannot truly know unless I dig for the timestamp inside, but then again that may not have even existed in some builds. Also, the oldest builds are the most elusive. Ultimately, this project was also restarted many times when updates happened to base Unifont or the Unicode Standard. So, because I can't do a detailed changelog due to the above factors, I made the description detailed. 

Contributors: 

Unifont has MANY authors to it, and always did. Some were even anonymous. I will try and list as many as I can (I scoured every Unifont page and even searched for the BDFs used and looked for any credits. Also, I'm keeping this field ASCII-safe, so I did take measures to do so, while also not omitting them from the list. I did research the rules of how to properly do it. Also, I wanted to be thorough, because attribution is important. Also, I made sure to credit what actually is in here. Also, to avoid potential issues that could arise, I didn't feel comfortable listing the middle names of the two people here who have freely given theirs, either on said user's website in one of the two people, or in one of their credits on the official Unifont website in the case of the second person. However, in the case of the individual with two middle names, I credited said individual as is on the Unifont website within ASCII limits, though, specifically, an archived version because said person created the TrueType scripts, which are now obsolete. In the case of the person whose middle name is only credited once on the Unifont website, later credits for this person don't provide a middle name, so to protect that person's privacy I am keeping it that way. As for the person whose name is on said person's website, this individual does not provide even a middle initial on Unifont's website's instance of said individual's name, but provides the initial more prominently on said user's website than said person's middle name. So, to protect said person's privacy, I am not providing that person's middle name either. Basically I'm sticking to the Unifont website's credits, as well as the credits in the fonts that Unifont borrows from that still exist and also still have credits. I also went through the original site's credits from before Unifoundry was the link to Unifont. Ultimately, I wanted to do due diligence in proper attribution without causing problems. I even preserved the original casing in any credits with all-caps components for the sake of faithfulness. Anyways, here is the list of credits):

Roman Cyzborra, Paul Hardy, David Corbett, Johnnie Weaver, He Zhinxiang, Hu Yuanxing, Toshiyuki Imamura, HANATAKA Shinya, Taichi Kawabata, Yuko, Koichi Yasuoka, TOYOSHIMA Masayuki, Kazuo Koike, SATO Yasunao, Qianqian Fang, Helmut Grohne, Anonymous1, Andrew Miller, Michael Walden, Terence Eden, Luis Alejandro Gonzalez Miranda, Nils Moskopp, Artur Quaglio, Jeong-Mi, David Starner, Rich Felker, Jungshik Shin, Joshua Kraemer (I don't know if FontForge supports umlauts in FONTLOG, so I'm sticking to ASCII), Jaldhar Vyas, Takahashi Naoto, Markus Kuhn, Kaleb Keithley, Sihattha, Mark Leisher, Primoz Peterlin, Admas Fisseha, Kagotani, Hong Kong University, Mark Crispin, Frank Portaneri, Fethi Amara, Manop Wongsaisuwan, Yu Izumi, Rebecca Bettencourt, WenQuanYi, DataBeaver, Minseo Lee, et. al., and me, stgiga. I prefer not to give my real name out online.

Hopefully this FONTLOG serves as a good record.

Generated the final build on September 12th, 2023, at 5:11 PM in California time! I'm finally glad to be liberated from this years-long project! Enjoy!

December 18th, 2023:
Added justification table and sample text.

Updated log.

WOFF time.Description:
This is a modified build of the final (and most complete) TrueType build of GNU Unifont (15.0.06-JP, which has more characters than non-JP, allowing for more shades of brightness when making videos or images into Unicode art. 303 of said characters are in Plane 2 and provide enhanced coverage of JIS X 0213, as well as 3 Plane 3 characters, namely the Taito Kanji and both variations of the Biang character. Said characters are rather interesting to see in a 16px font given their high amount of strokes) merged with the last version of GNU Unifont Upper (Plane 1 as well as Plane 14) capable of being merged with Unifont's Plane 0 characters (11.0.01 Upper. Going any higher than GNU Unifont 11.0.01 Upper is not possible, even if the version of Unifont used for Plane 0 characters is also 11.0.01) after deleting the black boxes that contain the hexadecimal values of unassigned characters.
So you end up with Unicode 15.0 (released on September 13th, 2022) support in Plane 0, as well as some JIS X 0213 Plane 2 Kanji, plus the Biang and Taito Plane 3 characters. 

Since September 12th, 2023's Unicode 15.1 only added CJK Unified Ideographs Extension I in Plane 2 (which Unifont has a long history of shying away from) as well as 5 Ideographic Description Characters (which are in Plane 0 and are closer to control characters but in reality are not), and nothing else, it means that the Plane 0 coverage remains valid beyond just 15.0 until Unicode 16.0 happens, a version which adds some characters into Plane 0 that, unlike the extra Ideographic Description Characters added into Plane 0 during Unicode 15.1, don't share some semblance of similarity to control characters (in reality, Ideographic Description Characters are not control characters, hence why I say "some semblance of similarity"). So you have Plane 0 support for the vast majority of September 12th, 2023's Unicode 15.1's Plane 0 characters (plus the Plane 2 JIS X 0213 characters and the 2020 Plane 3 Biang and Taito characters), and support for 2018's Plane 1 and Plane 14 characters as of Unifont 11.0.01 Upper (versions of Unifont Upper after 11.0.01 can't be merged with ANY version of Unifont 11 or higher unless one uses Apple's iOS Safari SVG webfont format), netting you a great amount of Unicode support. Now as for why TrueType, it's because Unifont 11.0.01 Upper was before OpenType builds existed, which is a problem because TrueType and OpenType store outlines differently, but that's only one of the problems preventing merging of Unifont 15.1 with 11.0.01 Upper. It turns out that even 2022 FontForge cannot understand Unifont's OpenType builds, even of the same era. Also, while you CAN compile newer TrueType builds manually, I unfortunately have found this impossible, even on my Linux machine. So, Unifont 15.0.06-JP + Unifont 11.0.01 Upper is the last word here. Thus, my years-long project to improve GNU Unifont is done, right here and now.

Now, I suppose mentioning some more about the font project is in order. This project was a years-long project (I started it just before my first year of American high school, so I was 13 at the time. I'm now 21 at present, and finishing up my third year of university) that was designed to address quite a few things I felt Unifont didn't think of. The major one was of course the separation of planes, but I also did some other changes. One was to take steps to make the font work in terminals, text editors, and IDEs that deliberately only try to load fonts that are monospaced. I set quite a few values to ones that such applications want. And, even though Unifont is actually duospaced (characters are 8x16 unless they require 16x16, or beyond up to 32x16 in the case of old Unifont 10 versions, which aren't in play here, and some of the more complicated Plane 1 scripts like Cuneiform and Egyptian Hieroglyphs are going to be drawn at 32x32 due to their complexity, but at present, this hasn't happened yet despite being in the works for years), in practice, it behaves just like a monospace font. I thus use it as my terminal and coding font to increase compatibility with Unicode when I'm doing coding and debugging, which is quite helpful, especially when said applications cannot support multiple fonts, which is bad for compatibility.

WIth regards to compatibility, I have also made the TrueType into an OpenType TrueType that is as hybrid as possible to keep certain apps happy, but I also took steps to ensure it won't break on older platforms and will work everywhere. I checked the "Apple" (for better Mac compatibility even on older versions of macOS, Mac OS X, and Mac OS) and "OpenType" boxes in FontForge, as well as "Dummy 'DSIG'" (which in combination with the "OpenType" box makes Windows and others treat it as OpenType, as well as others), plus the "Windows-compatible 'kern'" checkbox to do basically the same thing as the "Old-style 'kern'" checkbox but without conflicting with the "Apple" checkbox. Also, the OS/2 table version is deliberately left at 1, and the the GASP table is left unaltered from stock Unifont (it has a version of zero, isn't really populated, and it doesn't have "Optimized for ClearType" checked. Thus, older Windows versions won't complain either. Also I took measures to make the font work on pickier cmd.exe versions. I also made the TeX Table support "TeX Math Symbol" to fix stuff, and I checked "Has Vertical Metrics" to make it function in Inkscape environments involving vertical CJKV/etc. al. text. I also made BDF and TTF2PNG (a GPL2 program by DataBeaver of The DataBeaver's Domain that converts TrueType fonts into PNG font sheets) versions for environments where TrueType does not make sense, such as old Linux/etc. al. for BDF, and for character LCDs and other embedded systems where 1MiB is your limit (the TTF2PNG version, which is unabridged, also the BDF supports more characters than official Unifont's BDF does).

Basically, this project is designed to improve GNU Unifont and make it much more compatible, and it had MANY prototypes. A lot of the process involved trial and error with obscure utilities, sometimes on academic computers via FontForge Portable, and even had some builds transferred over to certain computers over USB flash drives. This project also outlived two computers of mine. Also, I remember always checking the Unicode Consortium's website and GNU Unifont's website for updated versions, then having to remake the entire project each update, which was a lot of where the length of the process came from. But now, after many years, I am finally liberated from this project, and I can put more effort into other things of mine, and all of you can have better Unicode support in as many places as possible thanks to a labor of love that took well over 5 years to make. I hope you enjoy this as much as I do.


Changelog:

September 12th, 2023:
This is THE final build, and no, I didn't remove vertical metrics.

There were many prototypes I made over the years, but none of them were necessarily production-ready, and while they probably have their dates on them, I don't know how much of a changelog I should do, especially since some older prototypes were significantly messy. Not to mention that the ones on Google Drive had their dates change when shared with myself, so I cannot truly know unless I dig for the timestamp inside, but then again that may not have even existed in some builds. Also, the oldest builds are the most elusive. Ultimately, this project was also restarted many times when updates happened to base Unifont or the Unicode Standard. So, because I can't do a detailed changelog due to the above factors, I made the description detailed. 

Contributors: 

Unifont has MANY authors to it, and always did. Some were even anonymous. I will try and list as many as I can (I scoured every Unifont page and even searched for the BDFs used and looked for any credits. Also, I'm keeping this field ASCII-safe, so I did take measures to do so, while also not omitting them from the list. I did research the rules of how to properly do it. Also, I wanted to be thorough, because attribution is important. Also, I made sure to credit what actually is in here. Also, to avoid potential issues that could arise, I didn't feel comfortable listing the middle names of the two people here who have freely given theirs, either on said user's website in one of the two people, or in one of their credits on the official Unifont website in the case of the second person. However, in the case of the individual with two middle names, I credited said individual as is on the Unifont website within ASCII limits, though, specifically, an archived version because said person created the TrueType scripts, which are now obsolete. In the case of the person whose middle name is only credited once on the Unifont website, later credits for this person don't provide a middle name, so to protect that person's privacy I am keeping it that way. As for the person whose name is on said person's website, this individual does not provide even a middle initial on Unifont's website's instance of said individual's name, but provides the initial more prominently on said user's website than said person's middle name. So, to protect said person's privacy, I am not providing that person's middle name either. Basically I'm sticking to the Unifont website's credits, as well as the credits in the fonts that Unifont borrows from that still exist and also still have credits. I also went through the original site's credits from before Unifoundry was the link to Unifont. Ultimately, I wanted to do due diligence in proper attribution without causing problems. I even preserved the original casing in any credits with all-caps components for the sake of faithfulness. Anyways, here is the list of credits):

Roman Cyzborra, Paul Hardy, David Corbett, Johnnie Weaver, He Zhinxiang, Hu Yuanxing, Toshiyuki Imamura, HANATAKA Shinya, Taichi Kawabata, Yuko, Koichi Yasuoka, TOYOSHIMA Masayuki, Kazuo Koike, SATO Yasunao, Qianqian Fang, Helmut Grohne, Anonymous1, Andrew Miller, Michael Walden, Terence Eden, Luis Alejandro Gonzalez Miranda, Nils Moskopp, Artur Quaglio, Jeong-Mi, David Starner, Rich Felker, Jungshik Shin, Joshua Kraemer (I don't know if FontForge supports umlauts in FONTLOG, so I'm sticking to ASCII), Jaldhar Vyas, Takahashi Naoto, Markus Kuhn, Kaleb Keithley, Sihattha, Mark Leisher, Primoz Peterlin, Admas Fisseha, Kagotani, Hong Kong University, Mark Crispin, Frank Portaneri, Fethi Amara, Manop Wongsaisuwan, Yu Izumi, Rebecca Bettencourt, WenQuanYi, DataBeaver, Minseo Lee, et. al., and me, stgiga. I prefer not to give my real name out online.

Hopefully this FONTLOG serves as a good record.

Generated the final build on September 12th, 2023, at 5:11 PM in California time! I'm finally glad to be liberated from this years-long project! Enjoy!

December 18th, 2023:
Added justification table and sample text.

Updated log.

WOFF time.

WOFF2 time.Description:
This is a modified build of the final (and most complete) TrueType build of GNU Unifont (15.0.06-JP, which has more characters than non-JP, allowing for more shades of brightness when making videos or images into Unicode art. 303 of said characters are in Plane 2 and provide enhanced coverage of JIS X 0213, as well as 3 Plane 3 characters, namely the Taito Kanji and both variations of the Biang character. Said characters are rather interesting to see in a 16px font given their high amount of strokes) merged with the last version of GNU Unifont Upper (Plane 1 as well as Plane 14) capable of being merged with Unifont's Plane 0 characters (11.0.01 Upper. Going any higher than GNU Unifont 11.0.01 Upper is not possible, even if the version of Unifont used for Plane 0 characters is also 11.0.01) after deleting the black boxes that contain the hexadecimal values of unassigned characters.
So you end up with Unicode 15.0 (released on September 13th, 2022) support in Plane 0, as well as some JIS X 0213 Plane 2 Kanji, plus the Biang and Taito Plane 3 characters. 

Since September 12th, 2023's Unicode 15.1 only added CJK Unified Ideographs Extension I in Plane 2 (which Unifont has a long history of shying away from) as well as 5 Ideographic Description Characters (which are in Plane 0 and are closer to control characters but in reality are not), and nothing else, it means that the Plane 0 coverage remains valid beyond just 15.0 until Unicode 16.0 happens, a version which adds some characters into Plane 0 that, unlike the extra Ideographic Description Characters added into Plane 0 during Unicode 15.1, don't share some semblance of similarity to control characters (in reality, Ideographic Description Characters are not control characters, hence why I say "some semblance of similarity"). So you have Plane 0 support for the vast majority of September 12th, 2023's Unicode 15.1's Plane 0 characters (plus the Plane 2 JIS X 0213 characters and the 2020 Plane 3 Biang and Taito characters), and support for 2018's Plane 1 and Plane 14 characters as of Unifont 11.0.01 Upper (versions of Unifont Upper after 11.0.01 can't be merged with ANY version of Unifont 11 or higher unless one uses Apple's iOS Safari SVG webfont format), netting you a great amount of Unicode support. Now as for why TrueType, it's because Unifont 11.0.01 Upper was before OpenType builds existed, which is a problem because TrueType and OpenType store outlines differently, but that's only one of the problems preventing merging of Unifont 15.1 with 11.0.01 Upper. It turns out that even 2022 FontForge cannot understand Unifont's OpenType builds, even of the same era. Also, while you CAN compile newer TrueType builds manually, I unfortunately have found this impossible, even on my Linux machine. So, Unifont 15.0.06-JP + Unifont 11.0.01 Upper is the last word here. Thus, my years-long project to improve GNU Unifont is done, right here and now.

Now, I suppose mentioning some more about the font project is in order. This project was a years-long project (I started it just before my first year of American high school, so I was 13 at the time. I'm now 21 at present, and finishing up my third year of university) that was designed to address quite a few things I felt Unifont didn't think of. The major one was of course the separation of planes, but I also did some other changes. One was to take steps to make the font work in terminals, text editors, and IDEs that deliberately only try to load fonts that are monospaced. I set quite a few values to ones that such applications want. And, even though Unifont is actually duospaced (characters are 8x16 unless they require 16x16, or beyond up to 32x16 in the case of old Unifont 10 versions, which aren't in play here, and some of the more complicated Plane 1 scripts like Cuneiform and Egyptian Hieroglyphs are going to be drawn at 32x32 due to their complexity, but at present, this hasn't happened yet despite being in the works for years), in practice, it behaves just like a monospace font. I thus use it as my terminal and coding font to increase compatibility with Unicode when I'm doing coding and debugging, which is quite helpful, especially when said applications cannot support multiple fonts, which is bad for compatibility.

WIth regards to compatibility, I have also made the TrueType into an OpenType TrueType that is as hybrid as possible to keep certain apps happy, but I also took steps to ensure it won't break on older platforms and will work everywhere. I checked the "Apple" (for better Mac compatibility even on older versions of macOS, Mac OS X, and Mac OS) and "OpenType" boxes in FontForge, as well as "Dummy 'DSIG'" (which in combination with the "OpenType" box makes Windows and others treat it as OpenType, as well as others), plus the "Windows-compatible 'kern'" checkbox to do basically the same thing as the "Old-style 'kern'" checkbox but without conflicting with the "Apple" checkbox. Also, the OS/2 table version is deliberately left at 1, and the the GASP table is left unaltered from stock Unifont (it has a version of zero, isn't really populated, and it doesn't have "Optimized for ClearType" checked. Thus, older Windows versions won't complain either. Also I took measures to make the font work on pickier cmd.exe versions. I also made the TeX Table support "TeX Math Symbol" to fix stuff, and I checked "Has Vertical Metrics" to make it function in Inkscape environments involving vertical CJKV/etc. al. text. I also made BDF and TTF2PNG (a GPL2 program by DataBeaver of The DataBeaver's Domain that converts TrueType fonts into PNG font sheets) versions for environments where TrueType does not make sense, such as old Linux/etc. al. for BDF, and for character LCDs and other embedded systems where 1MiB is your limit (the TTF2PNG version, which is unabridged, also the BDF supports more characters than official Unifont's BDF does).

Basically, this project is designed to improve GNU Unifont and make it much more compatible, and it had MANY prototypes. A lot of the process involved trial and error with obscure utilities, sometimes on academic computers via FontForge Portable, and even had some builds transferred over to certain computers over USB flash drives. This project also outlived two computers of mine. Also, I remember always checking the Unicode Consortium's website and GNU Unifont's website for updated versions, then having to remake the entire project each update, which was a lot of where the length of the process came from. But now, after many years, I am finally liberated from this project, and I can put more effort into other things of mine, and all of you can have better Unicode support in as many places as possible thanks to a labor of love that took well over 5 years to make. I hope you enjoy this as much as I do.


Changelog:

September 12th, 2023:
This is THE final build, and no, I didn't remove vertical metrics.

There were many prototypes I made over the years, but none of them were necessarily production-ready, and while they probably have their dates on them, I don't know how much of a changelog I should do, especially since some older prototypes were significantly messy. Not to mention that the ones on Google Drive had their dates change when shared with myself, so I cannot truly know unless I dig for the timestamp inside, but then again that may not have even existed in some builds. Also, the oldest builds are the most elusive. Ultimately, this project was also restarted many times when updates happened to base Unifont or the Unicode Standard. So, because I can't do a detailed changelog due to the above factors, I made the description detailed. 

Contributors: 

Unifont has MANY authors to it, and always did. Some were even anonymous. I will try and list as many as I can (I scoured every Unifont page and even searched for the BDFs used and looked for any credits. Also, I'm keeping this field ASCII-safe, so I did take measures to do so, while also not omitting them from the list. I did research the rules of how to properly do it. Also, I wanted to be thorough, because attribution is important. Also, I made sure to credit what actually is in here. Also, to avoid potential issues that could arise, I didn't feel comfortable listing the middle names of the two people here who have freely given theirs, either on said user's website in one of the two people, or in one of their credits on the official Unifont website in the case of the second person. However, in the case of the individual with two middle names, I credited said individual as is on the Unifont website within ASCII limits, though, specifically, an archived version because said person created the TrueType scripts, which are now obsolete. In the case of the person whose middle name is only credited once on the Unifont website, later credits for this person don't provide a middle name, so to protect that person's privacy I am keeping it that way. As for the person whose name is on said person's website, this individual does not provide even a middle initial on Unifont's website's instance of said individual's name, but provides the initial more prominently on said user's website than said person's middle name. So, to protect said person's privacy, I am not providing that person's middle name either. Basically I'm sticking to the Unifont website's credits, as well as the credits in the fonts that Unifont borrows from that still exist and also still have credits. I also went through the original site's credits from before Unifoundry was the link to Unifont. Ultimately, I wanted to do due diligence in proper attribution without causing problems. I even preserved the original casing in any credits with all-caps components for the sake of faithfulness. Anyways, here is the list of credits):

Roman Cyzborra, Paul Hardy, David Corbett, Johnnie Weaver, He Zhinxiang, Hu Yuanxing, Toshiyuki Imamura, HANATAKA Shinya, Taichi Kawabata, Yuko, Koichi Yasuoka, TOYOSHIMA Masayuki, Kazuo Koike, SATO Yasunao, Qianqian Fang, Helmut Grohne, Anonymous1, Andrew Miller, Michael Walden, Terence Eden, Luis Alejandro Gonzalez Miranda, Nils Moskopp, Artur Quaglio, Jeong-Mi, David Starner, Rich Felker, Jungshik Shin, Joshua Kraemer (I don't know if FontForge supports umlauts in FONTLOG, so I'm sticking to ASCII), Jaldhar Vyas, Takahashi Naoto, Markus Kuhn, Kaleb Keithley, Sihattha, Mark Leisher, Primoz Peterlin, Admas Fisseha, Kagotani, Hong Kong University, Mark Crispin, Frank Portaneri, Fethi Amara, Manop Wongsaisuwan, Yu Izumi, Rebecca Bettencourt, WenQuanYi, DataBeaver, Minseo Lee, et. al., and me, stgiga. I prefer not to give my real name out online.

Hopefully this FONTLOG serves as a good record.

Generated the final build on September 12th, 2023, at 5:11 PM in California time! I'm finally glad to be liberated from this years-long project! Enjoy!

December 18th, 2023:
Added justification table and sample text.

Updated log.

WOFF time.

WOFF2 time.

Better dfontDescription:
This is a modified build of the final (and most complete) TrueType build of GNU Unifont (15.0.06-JP, which has more characters than non-JP, allowing for more shades of brightness when making videos or images into Unicode art. 303 of said characters are in Plane 2 and provide enhanced coverage of JIS X 0213, as well as 3 Plane 3 characters, namely the Taito Kanji and both variations of the Biang character. Said characters are rather interesting to see in a 16px font given their high amount of strokes) merged with the last version of GNU Unifont Upper (Plane 1 as well as Plane 14) capable of being merged with Unifont's Plane 0 characters (11.0.01 Upper. Going any higher than GNU Unifont 11.0.01 Upper is not possible, even if the version of Unifont used for Plane 0 characters is also 11.0.01) after deleting the black boxes that contain the hexadecimal values of unassigned characters.
So you end up with Unicode 15.0 (released on September 13th, 2022) support in Plane 0, as well as some JIS X 0213 Plane 2 Kanji, plus the Biang and Taito Plane 3 characters. 

Since September 12th, 2023's Unicode 15.1 only added CJK Unified Ideographs Extension I in Plane 2 (which Unifont has a long history of shying away from) as well as 5 Ideographic Description Characters (which are in Plane 0 and are closer to control characters but in reality are not), and nothing else, it means that the Plane 0 coverage remains valid beyond just 15.0 until Unicode 16.0 happens, a version which adds some characters into Plane 0 that, unlike the extra Ideographic Description Characters added into Plane 0 during Unicode 15.1, don't share some semblance of similarity to control characters (in reality, Ideographic Description Characters are not control characters, hence why I say "some semblance of similarity"). So you have Plane 0 support for the vast majority of September 12th, 2023's Unicode 15.1's Plane 0 characters (plus the Plane 2 JIS X 0213 characters and the 2020 Plane 3 Biang and Taito characters), and support for 2018's Plane 1 and Plane 14 characters as of Unifont 11.0.01 Upper (versions of Unifont Upper after 11.0.01 can't be merged with ANY version of Unifont 11 or higher unless one uses Apple's iOS Safari SVG webfont format), netting you a great amount of Unicode support. Now as for why TrueType, it's because Unifont 11.0.01 Upper was before OpenType builds existed, which is a problem because TrueType and OpenType store outlines differently, but that's only one of the problems preventing merging of Unifont 15.1 with 11.0.01 Upper. It turns out that even 2022 FontForge cannot understand Unifont's OpenType builds, even of the same era. Also, while you CAN compile newer TrueType builds manually, I unfortunately have found this impossible, even on my Linux machine. So, Unifont 15.0.06-JP + Unifont 11.0.01 Upper is the last word here. Thus, my years-long project to improve GNU Unifont is done, right here and now.

Now, I suppose mentioning some more about the font project is in order. This project was a years-long project (I started it just before my first year of American high school, so I was 13 at the time. I'm now 21 at present, and finishing up my third year of university) that was designed to address quite a few things I felt Unifont didn't think of. The major one was of course the separation of planes, but I also did some other changes. One was to take steps to make the font work in terminals, text editors, and IDEs that deliberately only try to load fonts that are monospaced. I set quite a few values to ones that such applications want. And, even though Unifont is actually duospaced (characters are 8x16 unless they require 16x16, or beyond up to 32x16 in the case of old Unifont 10 versions, which aren't in play here, and some of the more complicated Plane 1 scripts like Cuneiform and Egyptian Hieroglyphs are going to be drawn at 32x32 due to their complexity, but at present, this hasn't happened yet despite being in the works for years), in practice, it behaves just like a monospace font. I thus use it as my terminal and coding font to increase compatibility with Unicode when I'm doing coding and debugging, which is quite helpful, especially when said applications cannot support multiple fonts, which is bad for compatibility.

WIth regards to compatibility, I have also made the TrueType into an OpenType TrueType that is as hybrid as possible to keep certain apps happy, but I also took steps to ensure it won't break on older platforms and will work everywhere. I checked the "Apple" (for better Mac compatibility even on older versions of macOS, Mac OS X, and Mac OS) and "OpenType" boxes in FontForge, as well as "Dummy 'DSIG'" (which in combination with the "OpenType" box makes Windows and others treat it as OpenType, as well as others), plus the "Windows-compatible 'kern'" checkbox to do basically the same thing as the "Old-style 'kern'" checkbox but without conflicting with the "Apple" checkbox. Also, the OS/2 table version is deliberately left at 1, and the the GASP table is left unaltered from stock Unifont (it has a version of zero, isn't really populated, and it doesn't have "Optimized for ClearType" checked. Thus, older Windows versions won't complain either. Also I took measures to make the font work on pickier cmd.exe versions. I also made the TeX Table support "TeX Math Symbol" to fix stuff, and I checked "Has Vertical Metrics" to make it function in Inkscape environments involving vertical CJKV/etc. al. text. I also made BDF and TTF2PNG (a GPL2 program by DataBeaver of The DataBeaver's Domain that converts TrueType fonts into PNG font sheets) versions for environments where TrueType does not make sense, such as old Linux/etc. al. for BDF, and for character LCDs and other embedded systems where 1MiB is your limit (the TTF2PNG version, which is unabridged, also the BDF supports more characters than official Unifont's BDF does).

Basically, this project is designed to improve GNU Unifont and make it much more compatible, and it had MANY prototypes. A lot of the process involved trial and error with obscure utilities, sometimes on academic computers via FontForge Portable, and even had some builds transferred over to certain computers over USB flash drives. This project also outlived two computers of mine. Also, I remember always checking the Unicode Consortium's website and GNU Unifont's website for updated versions, then having to remake the entire project each update, which was a lot of where the length of the process came from. But now, after many years, I am finally liberated from this project, and I can put more effort into other things of mine, and all of you can have better Unicode support in as many places as possible thanks to a labor of love that took well over 5 years to make. I hope you enjoy this as much as I do.


Changelog:

September 12th, 2023:
This is THE final build, and no, I didn't remove vertical metrics.

There were many prototypes I made over the years, but none of them were necessarily production-ready, and while they probably have their dates on them, I don't know how much of a changelog I should do, especially since some older prototypes were significantly messy. Not to mention that the ones on Google Drive had their dates change when shared with myself, so I cannot truly know unless I dig for the timestamp inside, but then again that may not have even existed in some builds. Also, the oldest builds are the most elusive. Ultimately, this project was also restarted many times when updates happened to base Unifont or the Unicode Standard. So, because I can't do a detailed changelog due to the above factors, I made the description detailed. 

Contributors: 

Unifont has MANY authors to it, and always did. Some were even anonymous. I will try and list as many as I can (I scoured every Unifont page and even searched for the BDFs used and looked for any credits. Also, I'm keeping this field ASCII-safe, so I did take measures to do so, while also not omitting them from the list. I did research the rules of how to properly do it. Also, I wanted to be thorough, because attribution is important. Also, I made sure to credit what actually is in here. Also, to avoid potential issues that could arise, I didn't feel comfortable listing the middle names of the two people here who have freely given theirs, either on said user's website in one of the two people, or in one of their credits on the official Unifont website in the case of the second person. However, in the case of the individual with two middle names, I credited said individual as is on the Unifont website within ASCII limits, though, specifically, an archived version because said person created the TrueType scripts, which are now obsolete. In the case of the person whose middle name is only credited once on the Unifont website, later credits for this person don't provide a middle name, so to protect that person's privacy I am keeping it that way. As for the person whose name is on said person's website, this individual does not provide even a middle initial on Unifont's website's instance of said individual's name, but provides the initial more prominently on said user's website than said person's middle name. So, to protect said person's privacy, I am not providing that person's middle name either. Basically I'm sticking to the Unifont website's credits, as well as the credits in the fonts that Unifont borrows from that still exist and also still have credits. I also went through the original site's credits from before Unifoundry was the link to Unifont. Ultimately, I wanted to do due diligence in proper attribution without causing problems. I even preserved the original casing in any credits with all-caps components for the sake of faithfulness. Anyways, here is the list of credits):

Roman Cyzborra, Paul Hardy, David Corbett, Johnnie Weaver, He Zhinxiang, Hu Yuanxing, Toshiyuki Imamura, HANATAKA Shinya, Taichi Kawabata, Yuko, Koichi Yasuoka, TOYOSHIMA Masayuki, Kazuo Koike, SATO Yasunao, Qianqian Fang, Helmut Grohne, Anonymous1, Andrew Miller, Michael Walden, Terence Eden, Luis Alejandro Gonzalez Miranda, Nils Moskopp, Artur Quaglio, Jeong-Mi, David Starner, Rich Felker, Jungshik Shin, Joshua Kraemer (I don't know if FontForge supports umlauts in FONTLOG, so I'm sticking to ASCII), Jaldhar Vyas, Takahashi Naoto, Markus Kuhn, Kaleb Keithley, Sihattha, Mark Leisher, Primoz Peterlin, Admas Fisseha, Kagotani, Hong Kong University, Mark Crispin, Frank Portaneri, Fethi Amara, Manop Wongsaisuwan, Yu Izumi, Rebecca Bettencourt, WenQuanYi, DataBeaver, Minseo Lee, et. al., and me, stgiga. I prefer not to give my real name out online.

Hopefully this FONTLOG serves as a good record.

Generated the final build on September 12th, 2023, at 5:11 PM in California time! I'm finally glad to be liberated from this years-long project! Enjoy!

December 18th, 2023:
Added justification table and sample text.

Updated log.

WOFF time.

WOFF2 time.

Better dfont

OTB time.Description:
This is a modified build of the final (and most complete) TrueType build of GNU Unifont (15.0.06-JP, which has more characters than non-JP, allowing for more shades of brightness when making videos or images into Unicode art. 303 of said characters are in Plane 2 and provide enhanced coverage of JIS X 0213, as well as 3 Plane 3 characters, namely the Taito Kanji and both variations of the Biang character. Said characters are rather interesting to see in a 16px font given their high amount of strokes) merged with the last version of GNU Unifont Upper (Plane 1 as well as Plane 14) capable of being merged with Unifont's Plane 0 characters (11.0.01 Upper. Going any higher than GNU Unifont 11.0.01 Upper is not possible, even if the version of Unifont used for Plane 0 characters is also 11.0.01) after deleting the black boxes that contain the hexadecimal values of unassigned characters.
So you end up with Unicode 15.0 (released on September 13th, 2022) support in Plane 0, as well as some JIS X 0213 Plane 2 Kanji, plus the Biang and Taito Plane 3 characters. 

Since September 12th, 2023's Unicode 15.1 only added CJK Unified Ideographs Extension I in Plane 2 (which Unifont has a long history of shying away from) as well as 5 Ideographic Description Characters (which are in Plane 0 and are closer to control characters but in reality are not), and nothing else, it means that the Plane 0 coverage remains valid beyond just 15.0 until Unicode 16.0 happens, a version which adds some characters into Plane 0 that, unlike the extra Ideographic Description Characters added into Plane 0 during Unicode 15.1, don't share some semblance of similarity to control characters (in reality, Ideographic Description Characters are not control characters, hence why I say "some semblance of similarity"). So you have Plane 0 support for the vast majority of September 12th, 2023's Unicode 15.1's Plane 0 characters (plus the Plane 2 JIS X 0213 characters and the 2020 Plane 3 Biang and Taito characters), and support for 2018's Plane 1 and Plane 14 characters as of Unifont 11.0.01 Upper (versions of Unifont Upper after 11.0.01 can't be merged with ANY version of Unifont 11 or higher unless one uses Apple's iOS Safari SVG webfont format), netting you a great amount of Unicode support. Now as for why TrueType, it's because Unifont 11.0.01 Upper was before OpenType builds existed, which is a problem because TrueType and OpenType store outlines differently, but that's only one of the problems preventing merging of Unifont 15.1 with 11.0.01 Upper. It turns out that even 2022 FontForge cannot understand Unifont's OpenType builds, even of the same era. Also, while you CAN compile newer TrueType builds manually, I unfortunately have found this impossible, even on my Linux machine. So, Unifont 15.0.06-JP + Unifont 11.0.01 Upper is the last word here. Thus, my years-long project to improve GNU Unifont is done, right here and now.

Now, I suppose mentioning some more about the font project is in order. This project was a years-long project (I started it just before my first year of American high school, so I was 13 at the time. I'm now 21 at present, and finishing up my third year of university) that was designed to address quite a few things I felt Unifont didn't think of. The major one was of course the separation of planes, but I also did some other changes. One was to take steps to make the font work in terminals, text editors, and IDEs that deliberately only try to load fonts that are monospaced. I set quite a few values to ones that such applications want. And, even though Unifont is actually duospaced (characters are 8x16 unless they require 16x16, or beyond up to 32x16 in the case of old Unifont 10 versions, which aren't in play here, and some of the more complicated Plane 1 scripts like Cuneiform and Egyptian Hieroglyphs are going to be drawn at 32x32 due to their complexity, but at present, this hasn't happened yet despite being in the works for years), in practice, it behaves just like a monospace font. I thus use it as my terminal and coding font to increase compatibility with Unicode when I'm doing coding and debugging, which is quite helpful, especially when said applications cannot support multiple fonts, which is bad for compatibility.

WIth regards to compatibility, I have also made the TrueType into an OpenType TrueType that is as hybrid as possible to keep certain apps happy, but I also took steps to ensure it won't break on older platforms and will work everywhere. I checked the "Apple" (for better Mac compatibility even on older versions of macOS, Mac OS X, and Mac OS) and "OpenType" boxes in FontForge, as well as "Dummy 'DSIG'" (which in combination with the "OpenType" box makes Windows and others treat it as OpenType, as well as others), plus the "Windows-compatible 'kern'" checkbox to do basically the same thing as the "Old-style 'kern'" checkbox but without conflicting with the "Apple" checkbox. Also, the OS/2 table version is deliberately left at 1, and the the GASP table is left unaltered from stock Unifont (it has a version of zero, isn't really populated, and it doesn't have "Optimized for ClearType" checked. Thus, older Windows versions won't complain either. Also I took measures to make the font work on pickier cmd.exe versions. I also made the TeX Table support "TeX Math Symbol" to fix stuff, and I checked "Has Vertical Metrics" to make it function in Inkscape environments involving vertical CJKV/etc. al. text. I also made BDF and TTF2PNG (a GPL2 program by DataBeaver of The DataBeaver's Domain that converts TrueType fonts into PNG font sheets) versions for environments where TrueType does not make sense, such as old Linux/etc. al. for BDF, and for character LCDs and other embedded systems where 1MiB is your limit (the TTF2PNG version, which is unabridged, also the BDF supports more characters than official Unifont's BDF does).

Basically, this project is designed to improve GNU Unifont and make it much more compatible, and it had MANY prototypes. A lot of the process involved trial and error with obscure utilities, sometimes on academic computers via FontForge Portable, and even had some builds transferred over to certain computers over USB flash drives. This project also outlived two computers of mine. Also, I remember always checking the Unicode Consortium's website and GNU Unifont's website for updated versions, then having to remake the entire project each update, which was a lot of where the length of the process came from. But now, after many years, I am finally liberated from this project, and I can put more effort into other things of mine, and all of you can have better Unicode support in as many places as possible thanks to a labor of love that took well over 5 years to make. I hope you enjoy this as much as I do.


Changelog:

September 12th, 2023:
This is THE final build, and no, I didn't remove vertical metrics.

There were many prototypes I made over the years, but none of them were necessarily production-ready, and while they probably have their dates on them, I don't know how much of a changelog I should do, especially since some older prototypes were significantly messy. Not to mention that the ones on Google Drive had their dates change when shared with myself, so I cannot truly know unless I dig for the timestamp inside, but then again that may not have even existed in some builds. Also, the oldest builds are the most elusive. Ultimately, this project was also restarted many times when updates happened to base Unifont or the Unicode Standard. So, because I can't do a detailed changelog due to the above factors, I made the description detailed. 

Contributors: 

Unifont has MANY authors to it, and always did. Some were even anonymous. I will try and list as many as I can (I scoured every Unifont page and even searched for the BDFs used and looked for any credits. Also, I'm keeping this field ASCII-safe, so I did take measures to do so, while also not omitting them from the list. I did research the rules of how to properly do it. Also, I wanted to be thorough, because attribution is important. Also, I made sure to credit what actually is in here. Also, to avoid potential issues that could arise, I didn't feel comfortable listing the middle names of the two people here who have freely given theirs, either on said user's website in one of the two people, or in one of their credits on the official Unifont website in the case of the second person. However, in the case of the individual with two middle names, I credited said individual as is on the Unifont website within ASCII limits, though, specifically, an archived version because said person created the TrueType scripts, which are now obsolete. In the case of the person whose middle name is only credited once on the Unifont website, later credits for this person don't provide a middle name, so to protect that person's privacy I am keeping it that way. As for the person whose name is on said person's website, this individual does not provide even a middle initial on Unifont's website's instance of said individual's name, but provides the initial more prominently on said user's website than said person's middle name. So, to protect said person's privacy, I am not providing that person's middle name either. Basically I'm sticking to the Unifont website's credits, as well as the credits in the fonts that Unifont borrows from that still exist and also still have credits. I also went through the original site's credits from before Unifoundry was the link to Unifont. Ultimately, I wanted to do due diligence in proper attribution without causing problems. I even preserved the original casing in any credits with all-caps components for the sake of faithfulness. Anyways, here is the list of credits):

Roman Cyzborra, Paul Hardy, David Corbett, Johnnie Weaver, He Zhinxiang, Hu Yuanxing, Toshiyuki Imamura, HANATAKA Shinya, Taichi Kawabata, Yuko, Koichi Yasuoka, TOYOSHIMA Masayuki, Kazuo Koike, SATO Yasunao, Qianqian Fang, Helmut Grohne, Anonymous1, Andrew Miller, Michael Walden, Terence Eden, Luis Alejandro Gonzalez Miranda, Nils Moskopp, Artur Quaglio, Jeong-Mi, David Starner, Rich Felker, Jungshik Shin, Joshua Kraemer (I don't know if FontForge supports umlauts in FONTLOG, so I'm sticking to ASCII), Jaldhar Vyas, Takahashi Naoto, Markus Kuhn, Kaleb Keithley, Sihattha, Mark Leisher, Primoz Peterlin, Admas Fisseha, Kagotani, Hong Kong University, Mark Crispin, Frank Portaneri, Fethi Amara, Manop Wongsaisuwan, Yu Izumi, Rebecca Bettencourt, WenQuanYi, DataBeaver, Minseo Lee, et. al., and me, stgiga. I prefer not to give my real name out online.

Hopefully this FONTLOG serves as a good record.

Generated the final build on September 12th, 2023, at 5:11 PM in California time! I'm finally glad to be liberated from this years-long project! Enjoy!

December 18th, 2023:
Added justification table and sample text.

Updated log.

WOFF time.

WOFF2 time.

Better dfont

OTB time.

SVG time.